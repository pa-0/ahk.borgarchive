# Fixes
	Update or get rid of timer - formatting, general code cleanup, even functionality?
		Build in selector for times
			Can have hard-coded list of choices to pass in
	Rewrite/clean up coding style for kdeMoverSizer
	Why does !v ListConverter stuff prompt a second time if you submit a blank?
	
# New
	Selector - consider adding a way to have certain columns pull from certain other columns' values (i.e. let name use width/height in resize selector)
	Consider an !c copy function hotkey for VB6
	Can we make the paste-and-double-check logic more generic?
		Probably would want to use WindowActions.selectAll(), which would require windowActions.tl entries for anything that doesn't support ^a
		Assuming it's coming from the clipboard, we might not even need a parameter - it just boils down to "does the original clipboard value match what we pasted"
		Make sure we preserve the clipboard by using getSelectedText()
		Places it's used right now:
			Hyperlinking
			Onetastic macro function signature
			Onetastic macro function XML
	Potential Hyperlinker updates
		Should we move the windowsAry definition to a .tl file?
			Could still be read in just the once (into a static variable)
			Easier to add/update stuff
		Actually, could we make the whole thing Selector-based?
			Columns:
				Popup window title (as applicable)
				Methods for linking:
					Open popup, pop in path, accept
					Wrapping text in some other text (for MatterMost)
						MatterMost case could probably be significantly simplified by just getting the selected text, deleting it, then replacing with a fully-build link string
							So link string with <tags> could be one of the columns in the .tl file
				Keys to send to accept link window (!a or {Enter})
				Tagged link string (for MatterMost)
			As now, existence in the resulting array for a key is indicative of support
			Verification of added link would be different for tagged link case
				Could try to select whole thing that SHOULD be there and compare?
	Consider adding position logic to resizing selector - for Telegram/Republic Anywhere "soc" size, onenote to right 3/4 of screen at home, etc.
		If we do this, we'd probably want to add machine filtering too (since "soc" size goes to top/bottom at home/work)
	Consider adding functionality to Toast to have it sleep until the toast goes away
		Possibly just static variables for wait times, that other scripts can grab based on how long they wanted to wait?
		Better would be to have the toast itself handle the waiting
			Could require an actual object in these cases, seems reasonable to do if needed
		Use case: compileEpicStudioRegex.ahk showing an FYI toast when it's finished
	TLG selector is quickly becoming a list of all current DLGs/PRJs - would it make sense to add opening functionality from it (or a new hotkey that uses it to open DLGs/PRJs)?
	Should #e logic in explorer.ahk live in launch.ahk instead?
		Maybe split it based on when explorer is active or not?
		Check what the support for explorer looks like in programs, launching, etc - should cover needs when not active, I'd expect?
	Figure out a better way to deal with NFS 3 day folder not existing when trying to open via folder hotkey
		Could we auto-create it, maybe?
			Would want a confirmation before doing so
			Then auto-open it once created
	Add a diffing hotkey (simple ^d maybe?) that makes it easier to do the same diff to a bunch of different routines
		Could use existing ^d hotkey to get popup, then !e to focus environment and enter the chosen one
		Initial submission would involve a selector popup of environments
	Figure out some way to get TLG DLG/PRJ selector stuff onto the clipboard, not only sending
	Consider adding a way for Selector to match on some other column than just NAME and ABBREV
		Could be used for transaction dump all script, to get name from epicEnvironments TLS instead of just using COMMID
		Alternatively, build out environments in MainConfig (though only if Epic machine) so we can retrieve specific data from it like we do windows, etc.
	Consider adding a client-file-viewing search to either search selector or actionObject (like codesearch routine)
	Consider reading in more .tl/.tls files at startup and caching them
		Alternatively, cache them after the first use?
	Consider augmenting/overloading the generic array class/object thing - to add stuff like join, dropping empty values, etc.
	Add more ListConverter features
		More output methods
			Filling in a OneNote table column (down arrow between?)
			Filling a list of IDs into EpicStudio (Before/after inputs on Selector popup for code surrounding lines, newlines only applied after that)
	Allow opening routines in EpicStudio in an environment other than DBC Dev (allow CDE)
		Options:
			New column in actionObject.tl for environment (would also allow us to expand codesearch routine option)
			New type of codesearch type with separate branch in ActionObject (not ideal)
	Can we make Alt+Shift+X hotkey blocking in notepad++ (in main script) contingent on whether the test script is running?
	Consider properties instead of getter functions for selector stuff (at least SelectorRow?)
	Figure out some central documentation method
		Dynamically pull hotkeys for the currently focused program?
		Hotkey to show window with all currently active hotkeys, divided up into current-program-specific and others
			Maybe separate section for stuff that runs when some other window exists (media hotkeys, for example)
	Add some way to move windows where I want them
		Hotkey-triggered, for all windows in list?
		Maybe lean on monitor fixer script from before?
		Make sure monitor exists before putting a window there
		Spotify
			Switch to other monitor, then correct one
			At home: move to correct height (not cut off)
		Work
			KDiff window - maximize on center screen
			MatterMost - half of left screen
		Telegram - left monitor, top or bottom depending on machine
		Pidgin window - top-right of left monitor
	Build a way to auto-reformat .tl files?
		Fix widths so they work nicely
			Will need to have a tab width parameter/argument somewhere for this (maybe in _constants or config?)
		Take into account overflow (across columns), with next field being empty or placeholder'd
	
# Documentation
	common
		classes
			hyperlinker
			iniObject
			listConverter
			mainConfig
			selectorGui
		functions
			clipboard
			data
			dateTime
			epic
			file
			gui
			io
			runCommands
			string
			window
	program
		emc2
		epicStudio
			Reconsider debug functions
		excel
		hyperspace
		onetastic
		outlook
		putty
		snapper
		vb6
	standalone
		halfQWERTY
		killUAC
		psxEmulatorController
		vimBindings
	
# Phase out
	
	