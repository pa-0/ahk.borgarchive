# New Ideas
	Selector headers aren't working right with filters again - see DLG-filtered TLG selector.
	Consider a function that updates a max value with less text
		updateMax(maxValue, possiblyBiggerValue)
		Probably in DataLib?
		Use cases:
			Anywhere we track the max of something
			reformatTL
	Look into auto-completion in Notepad++ for AHK
		In general for the language
		Could we add our own library of functions?
		Could we add our own classes and such?
	Notepad++ AHK documentation
		Update Notepad++ AHK documentation stuff to handle properties (with or without [])
			Properties with parameters, too - maybe just treat [] the same as ()?
		Make Ctrl+Enter hotkey in Notepad++ also add in bullets (* or -) if they started the previous row (ignoring whitespace and comment char, but not other stuff like (I,REQ))
	Figure out what to do about FileLib.cleanupPath() dropping (valid) quotes from the end of URLs
		Separate cleaning for URLs?
			How to sense? Using ActionObjectPath?
		Should we integrate this into ActionObjectPath instead? Is that overkill?
		Another option: a new Path class, that ActionObjectPath just uses?
	Consider changing the approach for hyperlinker a bit
		Have OneNote, others that need special handling do it themselves somehow
		Ideas:
			Passing in a BoundFunc
			Just having a function with the right name
				Would require a mapping from window name to class where function lives
			Have programs that need special handling call into the logic themselves and handle special logic
	Standardize how we format & structure classes
		Capitalization (Public vs _private members, Public vs private functions)
		Startup/default values
			Selector > guiSettings
			Hyperlinker > windows
			Toast > styles
			WindowActions > actionOverrides
		Include square brackets on properties (that don't take parameters)?
	Hotkey for automatically breaking up documentation lines to 100 chars wide
		Possibly reconsider the 100-char limit - wouldn't wider make more sense?
		Could take into account whether there would be only 1 small word moved down
		Could handle multiple line breaks
	Allow opening routines in EpicStudio in an environment other than DBC Dev (allow CDE)
		Options:
			New column in actionObject.tl for environment (would also allow us to expand codesearch routine option)
			New type of codesearch type with separate branch in ActionObject (not ideal)
	EpicStudio - add a diffing hotkey that makes it easier to do the same diff to a bunch of different routines
		Could use existing ^d hotkey to get popup, then !e to focus environment and enter the chosen one
		Initial submission would involve a selector popup of environments
	Add some way to move windows where I want them
		Hotkey-triggered, for all windows in list?
		Maybe lean on monitor fixer script from before?
		Make sure monitor exists before putting a window there
		Spotify
			Switch to other monitor, then correct one
			At home: move to correct height (not cut off)
		Work
			KDiff window - maximize on center screen
			MatterMost - half of left screen
		Telegram - left monitor, top or bottom depending on machine
		Pidgin window - top-right of left monitor
	Possibly have ActionObjectPath append a www. or http(s):// to the start of URLs before trying to launch them?
		Probably do it in open(), where we also check whether a local path exists
	
# Version Restrictions
	VDI current AHK version: 1.1.28.00
	1.1.29.00
		.Count()
			Remove special handling in array/object base classes
	1.1.31.00
		Switch()
			PhoneLib.reduceToDigits()
			Likely others too - WindowActions and similar would probably benefit
	1.1.31.01
		Execute (X) hotstrings can support spaces
			notepadPlusPlus
			emc2
			hotstrings
	
# TableList
	TableList mods - consider making it a replacement by default (only 1 active mod), only stack with labels
		Use case: onenote todos, dailies section could be more compact
	
# Selector
	Add some setting to have the popup appear when we pass in a bad value?
		Use case: Snapper, when we're on an INI we don't have items for.
	Dynamically resize abbreviation column based on widest value?
		To allow longer abbreviations
		Is that going to get weird with SelectorGui+FlexTable interactions?
	Consider adding a way to match on some other column than just NAME and ABBREV
		Use cases
			Transaction dump all script, to get name from epicEnvironments TLS instead of just using COMMID
				Alternatively, build out environments in Config (though only if Epic machine) so we can retrieve specific data from it like we do windows, etc.
	
# Toast
	Could we avoid flickering between .showPersistent() and .setText()?
		Maybe some way to set position without showing?
		It's kind of strange that .setText() shows the toast if it's hidden - could we avoid that, or is it required by Toast framework?
	Figure out how to deal with Toast/VisualWindow issue where upper-right toasts jump to the next monitor over
		Happens if they're anchored to right edge and then their text gets longer by enough.
		Looks like the issue is that we make the toast bigger enough that Windows decides it's on the next monitor
			We create a new VisualWindow each time we want to move the Toast
				Maybe we should have a persistent one instead?
			The actual resizing (via Gui, Show with AutoSize) happens in Toast.move()
				What if we create the VisualWindow earlier (before the AutoSize) and somehow use that to save off or anchor the Toast to the current monitor?
		When we fix this, we can update:
			iconTester.ahk - don't need a toast message up front, can be blank to start and we can just call switchToIconWithNum(0) instead of getting the text
	Do we want to add negative x/y values to mean how far off of the right/bottom to be?
		Would let us say, implement timer to be like the Windows media tile
	
# Documentation
	Figure out some central documentation method
		Dynamically pull hotkeys for the currently focused program?
		Hotkey to show window with all currently active hotkeys, divided up into current-program-specific and others
			Maybe separate section for stuff that runs when some other window exists (media hotkeys, for example)
	common
		functions
			epic
			gui
			io
			string
	