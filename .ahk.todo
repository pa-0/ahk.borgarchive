# In Progress
	
# Small
	Have compileEpicStudioRegex.ahk show an FYI toast when it's finished
	Selector: dynamically resize abbreviation column based on widest value?
		Is that going to get weird with SelectorGui+FlexTable interactions?
	Look at cleaning up all of the record-splitting and EMC2-object-processing functions in epic.ahk
		Can getObjectInfoFromEMC2 use extractEMC2ObjectInfoRaw (like selectSnapper does)?
		Can processEMC2ObjectInfo use getTrueEMC2INI?
	Consider looking up and caching default offset values for different kinds of windows in MainConfig instead of calculating them on the fly every time
	Make media key one-off scripts single-only and replace (so I don't need to see the "do you want to replace?" popup)
	Try using Try/Catch handling around putty "find again" hotkeys: https://www.autohotkey.com/docs/commands/Try.htm
	Add catch and error toast for launching a program that doesn't exist (Launchy in VDIs, for example)
	Should ACTION_*, etc. constants live inside of ActionObject? Might let us shorten names a little.
	VisualWindow
		Finish documentation
		Move getWindowVisualPosition, moveWindowVisual, convertVisualWinPositions into VisualWindow
			Also getWindowOffsets, once VB6 bit is solved (looks like we need access to converted actual coordinates [or rather, turning relative-to-visual-window coords into actual ones])
	Reconsider setMatchSettings/restoreMatchSettings
		Hard to tell what different parameters are
		Would functions/restores for individual settings be better?
			Alternatively, something that took the name of the thing (presumably as a key into the actual command/A_* variable)?
	Consider using title string-building function for !+x blocking stuff in notepad++ script
	
# Large
	Try to clean up window.ahk some more - can we rearrange functions to have more discrete purposes and make more sense?
		Should window moving/sizing logic be a separate script? windowPosition.ahk, maybe?
		Should functions that deal with visual heights/widths/positions be named to include "visual"?
		Make use of new VisualWindow class?
			Could we have it also support the relative values for corners/centers, to get rid of separate need for *Relative*Position* functions?
	Rewrite colorette so we don't have to deal with the exe?
		Would let us get rid of the special exe case in .gitignore, too
	Consider some way to more precisely move the mouse cursor on command
		A standalone script (like griddy?) or just a hotkey
		Lock the mouse?
			Until exit?
			Until click?
			Not at all?
		Arrow keys to move cursor
		Maybe modifier keys for bigger jumps, jump to other side of screen, etc.
	Consider moving program-specific functions into their own (program-named) classes?
		Would remove need to prefix all function names with program name
		Could it make referencing program-specific things from common code easier?
			We're basically talking about interfaces then, aren't we?
	Take another look at ActionObject's workflow
		We're doing selector stuff twice - is that really what we want?
			extractEMC2ObjectInfo(Raw) does it with a prompt, all at once - would that be better?
	Add a diffing hotkey (simple ^d maybe?) that makes it easier to do the same diff to a bunch of different routines
		Could use existing ^d hotkey to get popup, then !e to focus environment and enter the chosen one
		Initial submission would involve a selector popup of environments
	ListConverter - more output methods
		Filling in a OneNote table column (down arrow between?)
		Filling a list of IDs into EpicStudio (Before/after inputs on Selector popup for code surrounding lines, newlines only applied after that)
			Maybe take this a step further and make it specifically filling in an array?
			Make sure that dot level is taken into account (I think I have functions for that)
	Selector - consider adding a way to match on some other column than just NAME and ABBREV
		Could be used for transaction dump all script, to get name from epicEnvironments TLS instead of just using COMMID
		Alternatively, build out environments in MainConfig (though only if Epic machine) so we can retrieve specific data from it like we do windows, etc.
	Consider reading in more .tl/.tls files at startup and caching them
		Alternatively, cache them after the first use?
			Basically static variables, like we're doing in Hyperlinker
	Build a way to auto-reformat .tl files?
		Fix widths so they work nicely
			Will need to have a tab width parameter/argument somewhere for this (maybe in _constants or config?)
		Take into account overflow (across columns), with next field being empty or placeholder'd
	Consider adding a client-file-viewing search to either search selector or actionObject (like codesearch routine)
	Consider augmenting/overloading the generic array class/object thing - to add stuff like join, dropping empty values, etc.
	Allow opening routines in EpicStudio in an environment other than DBC Dev (allow CDE)
		Options:
			New column in actionObject.tl for environment (would also allow us to expand codesearch routine option)
			New type of codesearch type with separate branch in ActionObject (not ideal)
	Figure out some central documentation method
		Dynamically pull hotkeys for the currently focused program?
		Hotkey to show window with all currently active hotkeys, divided up into current-program-specific and others
			Maybe separate section for stuff that runs when some other window exists (media hotkeys, for example)
	Add some way to move windows where I want them
		Hotkey-triggered, for all windows in list?
		Maybe lean on monitor fixer script from before?
		Make sure monitor exists before putting a window there
		Spotify
			Switch to other monitor, then correct one
			At home: move to correct height (not cut off)
		Work
			KDiff window - maximize on center screen
			MatterMost - half of left screen
		Telegram - left monitor, top or bottom depending on machine
		Pidgin window - top-right of left monitor
	
# Documentation
	common
		classes
			duration
			iniObject
			listConverter
			mainConfig
			selectorGui
		functions
			clipboard
			data
			dateTime
			epic
			file
			gui
			io
			runCommands
			string
			window
	program
		emc2
		epicStudio
			Reconsider debug functions
		excel
		hyperspace
		outlook
		putty
		snapper
		vb6
	standalone
		halfQWERTY
		killUAC
		psxEmulatorController
		vimBindings
	