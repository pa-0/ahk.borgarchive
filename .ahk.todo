# In Progress
	Update or get rid of timer - formatting, general code cleanup, even functionality?
	
# Small
	Consider adding position logic to resizing selector - for Telegram/Republic Anywhere "soc" size, onenote to right 3/4 of screen at home, etc.
		If we do this, we'd probably want to add machine filtering too (since "soc" size goes to top/bottom at home/work)
	Support ranges (x:y) in Snapper record-opening stuff (Snapper launcher + from new record popup)
	putty.getPuttyLogFile() - consider replacing the sleep with a WinWait
	
# Large
	Consider adding functionality (probably in window.ahk) to get x/y values for left/right/center aligning windows on x/y axes (taking their widths [and probably offsets] into account).
		Places that could use it:
			Toast.move()
			Other stuff in window.ahk (centerWindow, etc.)
	Take another look at ActionObject's workflow
		We're doing selector stuff twice - is that really what we want?
			extractEMC2ObjectInfo(Raw) does it with a prompt, all at once - would that be better?
	Add a diffing hotkey (simple ^d maybe?) that makes it easier to do the same diff to a bunch of different routines
		Could use existing ^d hotkey to get popup, then !e to focus environment and enter the chosen one
		Initial submission would involve a selector popup of environments
	ListConverter - more output methods
		Filling in a OneNote table column (down arrow between?)
		Filling a list of IDs into EpicStudio (Before/after inputs on Selector popup for code surrounding lines, newlines only applied after that)
	Rewrite/clean up coding style for kdeMoverSizer
	Selector - consider adding a way to match on some other column than just NAME and ABBREV
		Could be used for transaction dump all script, to get name from epicEnvironments TLS instead of just using COMMID
		Alternatively, build out environments in MainConfig (though only if Epic machine) so we can retrieve specific data from it like we do windows, etc.
	Consider reading in more .tl/.tls files at startup and caching them
		Alternatively, cache them after the first use?
			Basically static variables, like we're doing in Hyperlinker
	Build a way to auto-reformat .tl files?
		Fix widths so they work nicely
			Will need to have a tab width parameter/argument somewhere for this (maybe in _constants or config?)
		Take into account overflow (across columns), with next field being empty or placeholder'd
	Consider adding a client-file-viewing search to either search selector or actionObject (like codesearch routine)
	Consider augmenting/overloading the generic array class/object thing - to add stuff like join, dropping empty values, etc.
	Allow opening routines in EpicStudio in an environment other than DBC Dev (allow CDE)
		Options:
			New column in actionObject.tl for environment (would also allow us to expand codesearch routine option)
			New type of codesearch type with separate branch in ActionObject (not ideal)
	Toast - consider adding functionality to have it sleep until the toast goes away
		Possibly just static variables for wait times, that other scripts can grab based on how long they wanted to wait?
		Better would be to have the toast itself handle the waiting
			Could require an actual object in these cases, seems reasonable to do if needed
		Use case: compileEpicStudioRegex.ahk showing an FYI toast when it's finished
	Figure out some central documentation method
		Dynamically pull hotkeys for the currently focused program?
		Hotkey to show window with all currently active hotkeys, divided up into current-program-specific and others
			Maybe separate section for stuff that runs when some other window exists (media hotkeys, for example)
	Add some way to move windows where I want them
		Hotkey-triggered, for all windows in list?
		Maybe lean on monitor fixer script from before?
		Make sure monitor exists before putting a window there
		Spotify
			Switch to other monitor, then correct one
			At home: move to correct height (not cut off)
		Work
			KDiff window - maximize on center screen
			MatterMost - half of left screen
		Telegram - left monitor, top or bottom depending on machine
		Pidgin window - top-right of left monitor
	
# Documentation
	common
		classes
			duration
			iniObject
			listConverter
			mainConfig
			selectorGui
		functions
			clipboard
			data
			dateTime
			epic
			file
			gui
			io
			runCommands
			string
			window
	program
		emc2
		epicStudio
			Reconsider debug functions
		excel
		hyperspace
		outlook
		putty
		snapper
		vb6
	standalone
		halfQWERTY
		killUAC
		psxEmulatorController
		vimBindings
	