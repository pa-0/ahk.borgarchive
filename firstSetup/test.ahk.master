{ ; Includes, other here-to-stay auto-execute things.
	#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
	SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
	SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.
	#SingleInstance force
	#Include <includeCommon>
	setCommonHotkeysType(HOTKEY_TYPE_Standalone)
	setUpTrayIcons("testGreen.ico", "testRed.ico")
}

; --------------------------------------------------------------------------

; Any specific auto-execute things that are needed go here.


; --------------------------------------------------------------------------

^b::
	
return

^+b::
	
return

; --------------------------------------------------------------------------
{ ; Hotkeys that don't change.
	
	; Hotkey to open test.ahk for editing.
	^+e::
		editScript(A_LineFile)
	return
	
	F1::
		selectWindowInfo() {
			rows := []
			
			WinGetClass, currClass, A
			tooltipText := getTooltipText()
			WinGetTitle, currTitle, A
			currControl := ControlGetFocus("A")
			; DEBUG.popup("Class", currClass, "Title", currTitle, "Control", currControl, "Tooltip text", tooltipText)
			
			s := new Selector("testWindowInfo.tl")
			key := s.selectGui("KEY")
			
			if(key = "CLASS")
				textToCopy := currClass
			else if(key = "TOOLTIP")
				textToCopy := tooltipText
			else if(key = "TITLE")
				textToCopy := currTitle
			else if(key = "CONTROL")
				textToCopy := currControl
			
			if(textToCopy) {
				clipboard := textToCopy
				DEBUG.popup("Copied to clipboard", textToCopy)
			}
		}
	
	!XButton1::
	!XButton2::
		copyTooltipText() {
			clipboard := getTooltipText()
			DEBUG.popup("Tooltip text", clipboard)
		}
}

#Include <commonHotkeys>
