{ ; Includes, other here-to-stay auto-execute things.
	#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
	SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
	SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.
	#SingleInstance force
	#Include <includeCommon>
	setCommonHotkeysType(HOTKEY_TYPE_Standalone)
	setUpTrayIcons("testGreen.ico", "testRed.ico")
}

; --------------------------------------------------------------------------

; Any specific auto-execute things that are needed go here.


; --------------------------------------------------------------------------

^b::
	
return

^+b::
	
return

; --------------------------------------------------------------------------
{ ; Hotkeys that don't change.
	
	; Hotkey to open test.ahk for editing.
	^+e::
		editScript(A_LineFile)
	return
	
	F1::
		selectWindowInfo() {
			rows := []
			
			WinGetClass, currClass, A
			WinGetTitle, currTitle, A
			currControl := ControlGetFocus("A")
			tooltipText := getTooltipText()
			
			; DEBUG.popup("Class", currClass, "Title", currTitle, "Control", currControl, "Tooltip text", tooltipText)
			
			rows.Insert(new SelectorRow("", "Class",   "c", currClass,   true))
			rows.Insert(new SelectorRow("", "Tooltip", "t", tooltipText, true))
			rows.Insert(new SelectorRow("", "Title",   "i", currTitle,   true))
			rows.Insert(new SelectorRow("", "Control", "o", currControl, true))
			
			s := new Selector()
			s.setChoices(rows)
			textToCopy := s.selectGui("DOACTION")
			
			if(textToCopy) {
				clipboard := textToCopy
				DEBUG.popup("Copied to clipboard", textToCopy)
			}
		}
	
	!XButton1::
	!XButton2::
		copyTooltipText() {
			clipboard := getTooltipText()
			DEBUG.popup("Tooltip text", clipboard)
		}
}

#Include <commonHotkeys>
