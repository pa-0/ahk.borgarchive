# Fixes
	Update or get rid of timer - formatting, general code cleanup, even functionality?
		Build in selector for times
			Can have hard-coded list of choices to pass in
	Rewrite/clean up coding style for kdeMoverSizer
	
# New ideas
	Turn UAC killer into a timer-based script instead of one-off.
		Still do the kill action once off the bat.
	Centralize format-as-code hotkey (^+c) like we did for hyperlinking selected text?
	Reconsider using SelectorRow objects as main driver for Selector actions - might be better to make a new class to hold info, and copy data over?
		Alternatively, just change format of selector action functions, to take:
			dataAry
			debugResult
		Would need to move isDebug from SelectorRow to just Selector in general, which makes enough sense.
		Might let us get away from the "backwards" filling strategy, where we have to store off the default overrides, then gui overrides, then apply all of that to the SelectorRow
			Instead, we could just have the one data object (array?), which gets filled in order:
				Default data (goes into data array, any visible fields get filled out of it)
				Data from choice (goes into data array, overwriting any conflicting values)
				Override data from GUI (goes into data array, overwriting any conflicting values)
	Selector - consider rearranging selectGUI flow somewhat
		defaultOverrideData and overrideData aren't really properties of the class - they're really just part of the selection process - better as local variables if we can structure things the right way
			Would be nice to determine choice and load that data without having to first store off field values into a member variable (local array is better, I guess?)
	Selector - break launchSelectorPopup() down, maybe turn it into a class of sorts?
		Could potentially have SelectorRow objects handle their own label placements?
	Add some way to show progress for long-running scripts - maybe using a tooltip or something?
	Audit all scripts for unused hotkeys
		Come up with centralized (or something that reads scripts and creates one) documentation of hotkeys?
	Go through pukkandan's startup script (https://github.com/pukkandan/My-Startup-Script) and pull out anything interesting
		Lib
			Toast - for displaying info with some hotkeys. Could be good for long-running stuff (like firstSetup)
		WinSizer - as a replacement/cross-pollination for KDE mover-sizer
		Tray - to make main script (and all standalone scripts) have a consistent tray menu
			Probably similar to what I did in my own share scripts?
	Build a way to auto-reformat .tl files?
		Fix widths so they work nicely
			Will need to have a tab width parameter/argument somewhere for this (maybe in _constants or config?)
		Take into account overflow, with next field being empty or placeholder'd
	
# Scripts to Share

# Documentation
	Debug
	Selector
		Settings passed in programmatically
	MainConfig and windows.tl support for RegEx in titles ({REGEX})

# Unit Tests
	ActionObject
