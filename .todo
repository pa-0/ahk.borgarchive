# AHK To Do
	
	'Selector Rewrite'
		Reconsider calling format
			Retire extraData - those are better handled with a return action, and passing the extra stuff yourself.
				Only usecase - Snapper selector, passing INI/ID (multiple of each?)
					Better to just pass all data out (can include a comma-separated list of IDs if we want, if the user gives us a comma-separated list in the respective field)
			Retire iconName in favor of settingOverrides TrayIcon subscript
			Separate out calling abilities by function, like TableList - filtering vs reading in.
				Data in
					s = new Selector(filePath, selRows)
				Process data (automatically done by Select [with no arguments] if not done here - make sure to document that it's totally optional unless you wanna do special stuff.)
					s.setTableListSettings(tableListSettings)
					s.setFilter(filter)
				Select
					s.selectGui(actionType, data, settingOverrides)
						(settingOverrides should only be Selector-specific things anyways)
				Select special (alternative callers from Select)
					s.selectChoice(actionType, data, silentChoice)
						(not settingOverrides - all current settings either have a separate parameter [action] or are GUI-specific)
		Move more things to arrays like TableList?
			Characters
			Settings
		Reduce number of this.* variables where possible - a lot of them seem unnecessary to put at class-level.
		Reexamine inner data structure of indices, labels, data, etc.
			labelIndices
			guiData (+guiDataFilled)
		"ShowArbitraryInputs" -> "ShowDataInputs"
		Reconsider actionObject.ahk top documentation - is it mostly duplicated from selector.ahk?
	
	'Fixes'
		Have centering hotkey take height of taskbar into account?
		ActionObject.process - needs* variables don't exist, but we're using them?
		Finish cleaning up recent rough changes
			Snapper URL stuff
			M code for loop snippet
		Fix the EpicStudio CDO generator to include tabs at beginning of lines to do better.
		Seems like standalone scripts reload once on their own, then are restarted again by main script - should either have them not restart, or don't need main script to reload them too.
	
	'New ideas'
		Check out function objects for selector action stuff: https://autohotkey.com/docs/objects/Functor.htm
		MainConfig - turn loadSettings() stuff into an inner function called however many times, not a loop over an array of settings.
		Debug - why are there two different build string functions, again?
		Debug - make a debug "builder" that stores off number of tabs and whatever last argument is?
		isWindowInStates - update to allow passing either an array or a single value for each parameter.
		Make it easier to get correct, drive-mapped paths
			Maybe when copy, check for epic:// and replace with correct drive letter accordingly?
		Generalize finding stuff
			Would need to make epic pieces specific?
				Could be done in same way as program filtering stuff works.
		Make a simpler icon setup function - almost everything (vimKeys is the only exception) just needs on/off.
		Snapper supports URLs as well - add support for that to ActionObject?
			Also include support for multiple things - maybe add that in general too?
				Also support newline separation (though likely just turn it into comma-separated for a consistent format).
		Add to vimKeys - modification for twitter like -> m key
		Clean up vimKeys stuff - should really make a separate function for whether in super mode (if even used anymore?).
		Alt+drag has some interesting quirks with certain programs (just OneNote on Win10 so far?)
			Add to framework, new column in programs.tl?
		Audit all scripts for unused hotkeys
			Come up with centralized (or something that reads scripts and creates one) documentation of hotkeys?
		Have remote desktop script mute volume on a loop, or whenever a new connection is made.
		Turn the "; Special programs/specific params." section in launch.ahk into a parameter to activate/run program?
			Or maybe stick the quotes in the config somehow?
		Expand emulator controller to support other systems, perhaps?
			At least separate general form (loop + joybuttons) from specific meanings?
		
	'Scripts to Share'
	
	'Documentation'
		Debug
	
	'Unit Tests'
		ActionObject
	
# .