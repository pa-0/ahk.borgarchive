# Fixes
	Take another look at genericSearch(), make sure we really need to do the forceArray() stuff
		Probably tweak the loop or pull out a subfunction, too.
	Update or get rid of timer - formatting, general code cleanup, even functionality?
		Build in selector for times
			Can have hard-coded list of choices to pass in
	Rewrite/clean up coding style for kdeMoverSizer
	Should we have various places referencing EMC2/Hyperspace just use MainConfig things like getWindowSetting("NAME") instead of explicit EXEs?
	
# Windows/programs config split
	Update programs
		Create ProgramInfo class;
			Single instance of program's info - name, path, arguments, etc.
		Read info into array of ProgramInfo objects
			Ignore ID columns other than the NAMEs, identify programs using new windows.tl functions instead
		Update callers to program getter/checker functions (as needed)
		Update programs.tl to use only the names
	Add new windowActions.tl handling
		Check whether new strategy is respected in window actions:
			If we're checking against a specific named window, turn that info into a titleString and check that way
			If we're trying to figure out what a window is, use current method (search through WindowInfo objects)
		Create (static) WindowActions class;
			Read in windowActions.tl
			Use MainConfig (new windows.tl functions) to identify windows
			Recreate window action functions in WindowActions
			Move action constants in as static variables (can be referenced outside as WindowActions.*)
				Is this worth it, inside the class?
					We could use this.*, but that's technically not correct...
		Update callers to use WindowActions
	Remove
		MainConfig reading in windowsLegacy.tl
			Places using corresponding getter/checker functions
			Those functions
		windowsLegacy.tl
		Duplicate functions in window.ahk
			Those now in MainConfig
			Those now in WindowActions
		Any leftover *Legacy functions (search for them)
		MainConfig.getWindow() - should have been replaced by new methods (by name vs by title string)
	Document
		WindowInfo
		ProgramInfo
		WindowActions
	
# New
	Consider properties instead of getter functions for selector stuff (at least SelectorRow?)
	Figure out some central documentation method
		Dynamically pull hotkeys for the currently focused program?
		Hotkey to show window with all currently active hotkeys, divided up into current-program-specific and others
			Maybe separate section for stuff that runs when some other window exists (media hotkeys, for example)
	Allow programs.tl and windows.tl to use tags for user path, etc.?
		Would doing this in general eliminate a lot of the need for machine filters?
			Would eliminate some of the switch-between-paths in windows/programs
			Some, but not all of it - still a need to filter some things (like which folders to show, which mapped drives, etc.)
	Add some way to move windows where I want them
		Hotkey-triggered, for all windows in list?
		Maybe lean on monitor fixer script from before?
		Make sure monitor exists before putting a window there
		Spotify
			Switch to other monitor, then correct one
			At home: move to correct height (not cut off)
		Work
			KDiff window - maximize on center screen
		Telegram - left monitor, top or bottom depending on machine
		Pidgin window - top-right of left monitor
	Build a way to auto-reformat .tl files?
		Fix widths so they work nicely
			Will need to have a tab width parameter/argument somewhere for this (maybe in _constants or config?)
		Take into account overflow (across columns), with next field being empty or placeholder'd
	Consider turning the various window actions into a separate class? WinActions, maybe?
		Could read stuff in itself, MainConfig would call
			All windows' info stored in static variables (like in MainConfig)
			If we do this, move window > getWindowTitleString() in too
	Consider moving some of the program- and window-related functions that basically just return/simply use values from MainConfig, into MainConfig
		activateProgram
		runProgram
		getProgramTitleString
	
# Documentation
	common
		data
		dateTime
		debug
		debugBuilder
		epic
		file
		gui
		iniObject
			Technically from outside source, but so simple...
		io
		mainConfig
			Particularly windows.tl support for RegEx in titles ({REGEX})
		runCommands
		selectorGui
		string
		window
	program
		emc2
		epicStudio
			Reconsider debug functions
		excel
		hyperspace
		outlook
		putty
		snapper
		vb6
	standalone
		halfQWERTY
		killUAC
		psxEmulatorController
		vimBindings
	
# Phase out
	
	