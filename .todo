# Fixes
	Update or get rid of timer - formatting, general code cleanup, even functionality?
		Build in selector for times
			Can have hard-coded list of choices to pass in
	Rewrite/clean up coding style for kdeMoverSizer
	Take another pass through Selector GUI stuff - seems like there's more options for positioning things now (https://autohotkey.com/docs/commands/Gui.htm#PosSize)
	Check out File.* methods for reading from file (https://autohotkey.com/docs/AHKL_ChangeLog.htm#v1.1.24.04)
	"idate" hotstring isn't working in Excel cells (though the formula bar is fine).
	Rewrite halfQwerty so it works and makes more sense
	
# New ideas
	Divide up config\local into instance-specific stuff (settings.ini) and private stuff (everything else).
		Be very careful with .gitignores and such
	Reconsider data vs dataFilled stuff in Selector - seems like it could be done better.
	Update all scripts to use the functional versions of commands that have output variables (functions in common\commandFunctions.ahk)
		Places to confirm before using:
			IniRead (don't we have ini.ahk to try out below?)
			Run (need to analyze a little more vs. my own wrappers)
	Check out enumerator objects for use instead of constants? (https://autohotkey.com/docs/objects/Enumerator.htm)
	Add some way to show progress for long-running scripts - maybe using a tooltip or something?
	Audit all scripts for unused hotkeys
		Come up with centralized (or something that reads scripts and creates one) documentation of hotkeys?
	Go through pukkandan's startup script (https://github.com/pukkandan/My-Startup-Script) and pull out anything interesting
		Lib
			Toast - for displaying info with some hotkeys. Could be good for long-running stuff (like firstSetup)
		WinSizer - as a replacement/cross-pollination for KDE mover-sizer
		Tray - to make main script (and all standalone scripts) have a consistent tray menu
			Probably similar to what I did in my own share scripts?
	Set up remote git server on CowBox, that local config files can live on and be synchronized to?
	Build a way to auto-reformat .tl files?
		Fix widths so they work nicely
			Will need to have a tab width parameter/argument somewhere for this (maybe in _constants or config?)
		Take into account overflow, with next field being empty or placeholder'd
	
# Scripts to Share

# Documentation
	Debug
	Selector
		Settings passed in programmatically

# Unit Tests
	ActionObject
