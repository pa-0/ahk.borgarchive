# Fixes
	Take another look at genericSearch(), make sure we really need to do the forceArray() stuff
		Probably tweak the loop or pull out a subfunction, too.
	Update or get rid of timer - formatting, general code cleanup, even functionality?
		Build in selector for times
			Can have hard-coded list of choices to pass in
	Rewrite/clean up coding style for kdeMoverSizer
	Should we have various places referencing EMC2/Hyperspace just use MainConfig things like getWindowSetting("NAME") instead of explicit EXEs?
	Rename various "contains" functions to be clearer in their distinction?
		arrayContains vs just contains
		stringContains
		isInArray
	
# New
	For TLG selector - allow some lines to be a prefix instead of getting replaced by custom message?
		Something special on the choice (another column, maybe)?
		A special prefix on the message?
			If this, does it make sense for it to be more general? That is, all override data fields can do this?
	Allow .TLs to use tags to reference their own values from columns?
	Allow programs.tl and windows.tl to use tags for user path, etc.?
		Would doing this in general eliminate a lot of the need for machine filters?
			Would eliminate some of the switch-between-paths in windows/programs
			Some, but not all of it - still a need to filter some things (like which folders to show, which mapped drives, etc.)
	Add some way to move windows where I want them
		Hotkey-triggered, for all windows in list?
		Maybe lean on monitor fixer script from before?
		Make sure monitor exists before putting a window there
		Spotify
			Switch to other monitor, then correct one
			At home: move to correct height (not cut off)
		Work
			KDiff window - maximize on center screen
		Telegram - left monitor, top or bottom depending on machine
		Pidgin window - top-right of left monitor
	Consider changing TableListMod format (current is {<COLUMN>}<OPERATION>:<TEXT>)
		Make COLUMN required?
		Allow r/R/replace/Replace/REPLACE vs only r
			Replace > replaceWith?
			Begin > prepend/addToStart?
			End > append/addToEnd?
		Don't have the column in {} at the beginning - hard to read. Alternatives:
			COLUMN.op(TEXT) - Make it the owner of the action
			op(COLUMN,TEXT) - Make it like an argument to the action
				Not as clear the distinction between column and text
		TLs that use mods:
			search
			windows
			programs
			actionObject
			configs
			mappedDrives
			epicStudioSnippets
	Should we have windows > activateProgram wait for window to be active after running?
		Possibly activate it itself after a timer if it's not active but exists?
	Set up AHK to run in VDIs
		AHK is already installed (and latest version at that!)
		Will want to use separate "admin" startup script (that runs as admin)
	Audit all scripts for unused hotkeys
		Come up with centralized (or something that reads scripts and creates one) documentation of hotkeys?
		Maybe just a standard format for hotkeys that goes at the top of scripts that implement them?
	Build a way to auto-reformat .tl files?
		Fix widths so they work nicely
			Will need to have a tab width parameter/argument somewhere for this (maybe in _constants or config?)
		Take into account overflow, with next field being empty or placeholder'd
	Consider WinActive()/WinExist() wrappers that take a window name (from the windows TL)
		Would let us turn things like this:
			if(WinActive(getWindowTitleString("OneNote")))
		Into something like this:
			if(NamedWinActive("OneNote"))
	Consider turning the various window actions into a separate class? WinActions, maybe?
		Could read stuff in itself, MainConfig would call
			All windows' info stored in static variables (like in MainConfig)
			If we do this, move window > getWindowTitleString() in too
	Consider moving some of the program- and window-related functions that basically just return/simply use values from MainConfig, into MainConfig
		activateProgram
		runProgram
		getProgramTitleString
	
# Documentation
	common
		data
		dateTime
		debug
		debugBuilder
		epic
		file
		gui
		iniObject
			Technically from outside source, but so simple...
		io
		mainConfig
			Particularly windows.tl support for RegEx in titles ({REGEX})
		runCommands
		selectorGui
		string
		window
	program
		emc2
		epicStudio
			Reconsider debug functions
		excel
		hyperspace
		outlook
		putty
		snapper
		vb6
	standalone
		halfQWERTY
		reversePhoneSearch
			Make sure this still works
		killUAC
		psxEmulatorController
		vimBindings
	
# Phase out
	GitHub Desktop has a beta dark theme now - can we get rid of special hotstring (and maybe that script entirely)?
	